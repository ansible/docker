
- file: path=my_sintra.tar state=absent

- name: Remove image sinatra
  docker_image:
    state: absent
    name: mysinatra
    tag: v1
  register: output

- debug: var=output
  when: playbook_debug

- name: Build and archive image
  docker_image:
    path: "{{ role_path }}/files/sinatra"
    name: mysinatra
    tag: v1
    archive_path: my_sinatra.tar
    debug: "{{ playbook_debug }}"
  register: output

- debug: var=output
  when: playbook_debug

- name: Get sinatra image facts
  docker_image_facts:
    name: mysinatra:v1
    debug: "{{ playbook_debug }}"
  register: output

- debug: var=output
  when: playbook_debug

- name: Sinatra image should be present
  assert:
    that: output.images | length == 1

- name: Get archive path facts
  stat: path=my_sinatra.tar
  register: output

- name: Archive file should be present
  assert:
    that: output.stat.exists

- name: Remove image sinatra
  docker_image:
    state: absent
    name: mysinatra
    tag: v1
  register: output

- debug: var=output
  when: playbook_debug

- name: Get sinatra image facts
  docker_image_facts:
    name: mysinatra:v1
  register: output

- debug: var=output
  when: playbook_debug

- name: Sinatra image should be absent
  assert:
    that: output.images | length == 0

- name: Load image from archive
  docker_image:
    name: mysinatra
    tag: v1
    load_path: my_sinatra.tar
    debug: "{{ playbook_debug }}"
  register: output

- debug: var=output
  when: playbook_debug

- name: Get sinatra image facts
  docker_image_facts:
    name: mysinatra:v1
  register: output

- debug: var=output
  when: playbook_debug

- name: Sinatra image should be present
  assert:
    that: output.images | length == 1

- name: Log into docker hub
  docker_login:
    username: "{{ dockerhub_username }}"
    password: "{{ dockerhub_password }}"
    email: "{{ dockerhub_email }}"
  register: output

- debug: var=output
  when: playbook_debug

- name: Login into local registry
  docker_login:
    registry_url: localhost:5000
    username: testuser
    password: testpassword
    email: testuer@yahoo.com
    debug: "{{ playbook_debug }}"
  register: output   

- name: Tag and push sinatra to local registry 
  docker_image:
    name: mysinatra
    tag: v1 
    repository: localhost:5000/dcoppenhagan/mysinatra 
    debug: "{{ playbook_debug }}" 
  register: output

- debug: var=output
  when: playbook_debug

- assert:
    that: "output.image.push_status is defined"
