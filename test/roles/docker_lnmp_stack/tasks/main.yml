#- name: Cleanup old data volume data [if exists]
#  file: path=/tmp/lnmp/mysql-data state=absent
#  become: True
#  become_user: root

- name: Create data volume
  file: path=/tmp/lnmp/mysql-data state=directory

- name: Do the lnmp images exist
  docker_image_facts:
    name:
      - lnmp_mysql:v1
      - lnmp_nginx:v1
    debug: "{{ playbook_debug }}"
    log_mode: "{{ playbook_debug_mode }}"
  register: image_facts

- debug: var=image_facts
  when: playbook_debug

- name: Build the mysql image
  docker_image:
    path: ./roles/docker_lnmp_stack/files/mysql
    name: lnmp_mysql
    tag: v1
  register: output

- debug: var=output
  when: playbook_debug

- assert:
    that: not output.changed
  when: image_facts.results | length == 2

- name: Build the nginx image
  docker_image:
    path: ./roles/docker_lnmp_stack/files/nginx
    name: lnmp_nginx
    tag: v1
  register: output

- debug: var=output
  when: playbook_debug

- assert:
    that: not output.changed
  when: image_facts.results | length == 2

- name: Start mysql container
  docker_container:
    name: lnmp_mysql
    detach: yes
    volumes:
      - /tmp/lnmp/mysql-data:/var/lib/mysql
    image: lnmp_mysql:v1
    debug: "{{ playbook_debug }}"
    log_mode: "{{ playbook_debug_mode }}"
  register: output

- debug: var=output
  when: playbook_debug

- name: Create nginx volumes
  file: 
    path: "{{ item }}" 
    state: directory
  with_items:
    - /tmp/lnmp/nginx-sites/logs

- name: Create nginx container
  docker_container:
    name: lnmp_nginx
    image: lnmp_nginx:v1
    ports:
      - 0.0.0.0:80:80
    volumes:
        - /tmp/lnmp/nginx-sites/logs/:/var/log/nginx
    links:
      - lnmp_mysql:lnmp_mysql
    debug: "{{ playbook_debug }}"
    log_mode: "{{ playbook_debug_mode }}"
  register: output

- debug: var=output
  when: playbook_debug

- name: wait for nginx to start
  local_action: wait_for port=80 host="{{ output['results']['NetworkSettings']['IPAddress'] }}" timeout=60

- name: Verify the nginx container is listening on port 80
  get_url: 
    url: "{{ 'http://' + output['results']['NetworkSettings']['IPAddress'] }}"
    dest: /tmp/lnmp/temp/index.html
    force: yes
  changed_when: false
  register: html  

- debug: var=html
  when: playbook_debug

- name: Get the database test page
  get_url: 
    url: "{{ 'http://' + output['results']['NetworkSettings']['IPAddress'] + '/dbtest.php' }}"
    dest: /tmp/lnmp/temp/dbtest.php
    force: yes
  changed_when: false
  register: html  

- name: Validate the content of the dbtest
  assert:
    that:
        - "'Name: Puffball' == lookup('file', '/tmp/lnmp/temp/dbtest.php')"


