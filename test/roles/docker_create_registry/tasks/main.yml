- name: Recreate secure docker registry
  docker_container:
    name: registry
    image: registry:2
    volumes:
      - "{{ role_path }}/files/certs:/certs"
      - "{{ role_path }}/files/auth:/auth"
    env:
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt
      REGISTRY_HTTP_TLS_KEY: /certs/domain.key
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: "Registry Realm"
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
    ports:
      - 5000:5000
    detach: yes
    recreate: yes
    debug: "{{ playbook_debug }}"
  register: output

- debug: var=output
  when: playbook_debug

- name: Should be idempotent 
  docker_container:
    name: registry
    image: registry:2
    volumes:
      - "{{ role_path }}/files/certs:/certs"
      - "{{ role_path }}/files/auth:/auth"
    env:
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt
      REGISTRY_HTTP_TLS_KEY: /certs/domain.key
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: "Registry Realm"
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
    ports:
      - 5000:5000
    detach: yes
    debug: "{{ playbook_debug }}"
  register: output

- debug: var=output
  when: playbook_debug

- assert:
    that: not output.changed

- name: Log into the new registry
  docker_login:
    registry_url: "{{ registry_host }}:5000"
    username: "{{ local_registry_user }}" 
    password: "{{ local_registry_password }}" 
    email: testuer@yahoo.com
    debug: "{{ playbook_debug }}"
  register: output

- debug: var=output
  when: playbook_debug

- name: Remove tagged image, if it exists
  docker_image:
    name: "{{ registry_host }}:5000/chouseknecht/ubuntu"
    tag: "14.04"
    debug: "{{ playbook_debug }}"
    state: absent
  register: output

- debug: var=output
  when: playbook_debug

- name: Tag and push an image
  docker_image:
    name: ubuntu
    tag: "14.04"
    repository: "{{ registry_host }}:5000/chouseknecht/ubuntu"
    push: yes
    debug: "{{ playbook_debug }}"
  register: output

- debug: var=output
  when: playbook_debug

- assert:
    that: "output.image.push_status is defined"
  when: output.changed

- name: Image should exist in registry
  command: "curl --insecure -u {{ local_registry_user }}:{{ local_registry_password }} https://{{ registry_host }}:5000/v2/_catalog"
  register: output

- debug: var=output
  when: playbook_debug

- assert:
    that:
      - "'chouseknecht' in output.stdout"

- name: Should allow special chars in name
  docker_login:
    url: "https://{{ registry_host }}:5000"
    username: chris+house_knecht
    password: password123
    debug: "{{ playbook_debug }}"
  register: output

- debug: var=output
  when: playbook_debug

- name: Should use image from local registry to create container
  docker_container:
    name: sleepy5 
    image: "{{ registry_host }}:5000/chouseknecht/ubuntu:14.04"
    command: sleep infinity
    state: started
    debug: "{{ playbook_debug }}"
  register: output

- debug: var=output
  when: playbook_debug

- assert:
    that:
      - ansible_docker_container.State.Running

- name: Remove container
  docker_container:
    name: sleepy5
    force_kill: yes
    state: absent
